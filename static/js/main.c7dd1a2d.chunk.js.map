{"version":3,"sources":["logo.svg","Components/Knob1.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","styles","fontFamily","textAlign","marginTop","LimitedKnob","propV","propValue","handleOnChange","propHandleOnChange","value","onChange","render","style","display","min","max","unlockDistance","preciseMode","width","height","skin","skins","document","getElementById","App","useState","setValue","samplePlaying","setSamplePlaying","power","setPower","isHeard","setIsHeard","qRef","useRef","wRef","eRef","aRef","sRef","dRef","zRef","xRef","cRef","handleUserKeyPress","event","key","keyCode","playAudio","current","e","play","currentTime","console","log","paused","title","volume","useEffect","window","addEventListener","removeEventListener","Audio","className","id","src","val","Math","abs","floor","class","type","name","pause","for","onClick","ref","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7dd1a2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Knob } from \"react-rotary-knob\";\nimport * as skins from \"react-rotary-knob-skin-pack\";\n\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\",\n  marginTop: \"6rem\"\n};\n\nconst LimitedKnob = ({ propValue, propHandleOnChange }) => {\n  const propV = propValue;\n  const handleOnChange = propHandleOnChange;\n\n  //let { value, ...rest } = this.props;\n\n  return <Knob value={propV} onChange={handleOnChange} />;\n};\n\nconst App = () => (\n  <div style={styles}>\n    <LimitedKnob\n      style={{ display: \"inline-block\" }}\n      min={0}\n      max={1000}\n      unlockDistance={0}\n      preciseMode={false}\n      width={200}\n      height={200}\n      skin={skins.s12}\n    />\n  </div>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n\nexport default LimitedKnob;\n","import React, { useState, useEffect, useRef, useReducer } from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { send } from \"q\";\nimport Knob1 from \"./Components/Knob1\";\nimport { Knob } from \"react-rotary-knob\";\nimport * as skins from \"react-rotary-knob-skin-pack\";\n\nfunction App() {\n  const [clicked, setClicked] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [isPlay, setIsPlay] = useState(true);\n  const [value, setValue] = useState(0);\n  const [samplePlaying, setSamplePlaying] = useState(\"Volume:0\");\n  const [volumeValue, setVolumeValue] = useState(0);\n  const [power, setPower] = useState(false);\n  const [isHeard, setIsHeard] = useState(\"\");\n\n  let qRef = useRef();\n  let wRef = useRef();\n  let eRef = useRef();\n  let aRef = useRef();\n  let sRef = useRef();\n  let dRef = useRef();\n  let zRef = useRef();\n  let xRef = useRef();\n  let cRef = useRef();\n  let ganjaRef = useRef();\n  let amenRef = useRef();\n  let emptyRef = useRef();\n\n  //function that handles keyPress events\n\n  const handleUserKeyPress = event => {\n    const { key, keyCode } = event;\n\n    if (keyCode === 81) {\n      playAudio(qRef.current);\n      setSamplePlaying(\"Backward-Loop\");\n    }\n\n    if (keyCode === 87) {\n      playAudio(wRef.current);\n      setSamplePlaying(\"Ragga-Vocal-1\");\n    }\n\n    if (keyCode === 69) {\n      playAudio(eRef.current);\n      setSamplePlaying(\"Dub-Siren\");\n    }\n\n    if (keyCode === 65) {\n      playAudio(aRef.current);\n      setSamplePlaying(\"Bass-1\");\n    }\n\n    if (keyCode === 83) {\n      playAudio(sRef.current);\n      setSamplePlaying(\"Bass-2\");\n    }\n\n    if (keyCode === 68) {\n      playAudio(dRef.current);\n      setSamplePlaying(\"Bass-3\");\n    }\n\n    if (keyCode === 90) {\n      playAudio(zRef.current);\n      setSamplePlaying(\"Drum-loop-FULL\");\n    }\n\n    if (keyCode === 88) {\n      playAudio(xRef.current);\n      setSamplePlaying(\"Drum-loop-ROLL-1\");\n    }\n\n    if (keyCode === 67) {\n      playAudio(cRef.current);\n      setSamplePlaying(\"Drum-loop-ROLL-2c\");\n    }\n  };\n\n  // useEffect() used to listen for \"keydown\" event - calls handleUserKeyPress as a callback\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  });\n\n  // sound samples\n  var snd = new Audio(\n    \"https://freecodecampassets.s3.us-east-2.amazonaws.com/2REVKIC5.wav\"\n  );\n\n  // function that plays sound samples and resets player to zero\n  function playAudio(e) {\n    if (power == true) {\n      setIsHeard(e);\n\n      e.play();\n      e.currentTime = 0;\n      console.log(e.paused);\n      setSamplePlaying(e.title);\n\n      e.volume = value / 100;\n    } else if (power == false) {\n      e.volume = 0;\n    }\n  }\n\n  function powerChange() {\n    setPower(!power);\n    if (power == true && isHeard) {\n      isHeard.pause();\n      isHeard.currentTime = 0;\n    }\n  }\n\n  function handleOnChange(val) {\n    //ignore change if distance is greater than defined\n    //here we use a distance of 200 because our max value is 1000\n    //change if needed\n    const maxDistance = 200;\n    let distance = Math.abs(val - this.state.value);\n    if (distance > maxDistance) {\n      return;\n    } else {\n      this.setState({ value: val });\n    }\n  }\n\n  function handleOnChange(val) {\n    //ignore change if distance is greater than defined\n    //here we use a distance of 200 because our max value is 1000\n    //change if needed\n    const maxDistance = 200;\n    let distance = Math.abs(val - { value });\n    if (distance > maxDistance) {\n      return;\n    } else {\n      setValue(val);\n      setSamplePlaying(\"Volume:\" + Math.floor(val));\n    }\n  }\n\n  //functions for setting pads that \"choke\" each other\n  //event listener (click) and handleClick function\n  /*\n  useEffect(() => {\n    window.addEventListener(\"click\", handleClick);\n\n    return () => {\n      window.removeEventListener(\"click\", handleClick);\n    };\n  });\n\n  const handleClick = event => {\n    const { target } = event;\n\n    setSource(target.name);\n  };\n  //urls as variables\n  let ganja =\n    \"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/all_ganjaman_let_loose.wav\";\n  let amen =\n    \"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/full+amen+wav.wav\";\n\n  //\n\n  function playAudioChoke(e) {\n    //setSource(ganja);\n    setTimeout(function() {\n      e.load();\n      e.play();\n    }, 0);\n  }\n*/\n  return (\n    <div className=\"App\" id=\"drum-machine\">\n      {/* Choke elements  \n      <audio src={source} ref={emptyRef}></audio>\n      <button\n        className=\"choke\"\n        name={ganja}\n        onClick={() => playAudioChoke(emptyRef.current)}\n        ref={ganjaRef}\n      >\n        ganja\n      </button>\n      <button\n        className=\"choke\"\n        name={amen}\n        onClick={() => playAudioChoke(emptyRef.current)}\n        ref={amenRef}\n      >\n        amen\n      </button>\n\n       End of choke elements  */}\n      <nav id=\"nav\">\n        <img\n          id=\"logo\"\n          src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/Lucid+Media+Logos+2020/SVG+Lime+LogoAsset+7.svg\"\n        />\n        <img\n          id=\"lucid-title\"\n          src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/Lucid+Media+Logos+2020/SVG+Lime+Lucid+NameAsset+8.svg\"\n        />\n      </nav>\n\n      <div className=\"volume-box\">\n        <div id=\"knob-wrapper\">\n          <Knob\n            id=\"knob\"\n            skin={skins.s15}\n            preciseMode={false}\n            onChange={handleOnChange}\n            unlockDistance={0}\n            style={{\n              width: \"100%\",\n              height: \"100%\"\n            }}\n          />\n        </div>\n        {power == true && (\n          <div id=\"display\">\n            <div id=\"sample-text\">{samplePlaying}</div>\n          </div>\n        )}\n        {power == false && <div id=\"display\"></div>}\n        <div class=\"onoffswitch\" id=\"switch\">\n          <input\n            type=\"checkbox\"\n            name=\"onoffswitch\"\n            className=\"onoffswitch-checkbox\"\n            id=\"myonoffswitch\"\n            onChange={powerChange}\n          />\n          <label className=\"onoffswitch-label\" for=\"myonoffswitch\">\n            <span className=\"onoffswitch-inner\"></span>\n            <span className=\"onoffswitch-switch\"></span>\n          </label>\n        </div>\n        <div id=\"button-well\">\n          <div className=\"Button-box\" id=\"button-box\">\n            <button\n              className=\"drum-pad\"\n              id=\"Backward-Loop\"\n              onClick={() => playAudio(qRef.current)}\n            >\n              <audio\n                src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/back+roll+wav.wav\"\n                type=\"audio/ogg\"\n                className=\"clip\"\n                id=\"Q\"\n                ref={qRef}\n                title=\"Backward-Loop\"\n              ></audio>\n              Q\n            </button>\n            <button\n              className=\"drum-pad\"\n              id=\"Ragga-Vocal-1\"\n              onClick={() => playAudio(wRef.current)}\n            >\n              <audio\n                src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/all_ganjaman_let_loose.wav\"\n                type=\"audio/ogg\"\n                className=\"clip\"\n                id=\"W\"\n                ref={wRef}\n                title=\"Ragga-Vocal-1\"\n              ></audio>\n              W\n            </button>\n            <button\n              className=\"drum-pad\"\n              id=\"Dub-Siren\"\n              onClick={() => playAudio(eRef.current)}\n            >\n              <audio\n                src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/dubsiren2+wav.wav\"\n                type=\"audio/ogg\"\n                className=\"clip\"\n                id=\"E\"\n                ref={eRef}\n                title=\"Dub-Siren\"\n              ></audio>\n              E\n            </button>\n            <button\n              className=\"drum-pad\"\n              id=\"Bass-1\"\n              onClick={() => playAudio(aRef.current)}\n            >\n              <audio\n                src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/bass+1+wav.wav\"\n                type=\"audio/ogg\"\n                className=\"clip\"\n                id=\"A\"\n                ref={aRef}\n                title=\"Bass-1\"\n              ></audio>\n              A\n            </button>\n            <button\n              className=\"drum-pad\"\n              id=\"Bass-2\"\n              onClick={() => playAudio(sRef.current)}\n            >\n              <audio\n                src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/up2semi+wav.wav\"\n                type=\"audio/ogg\"\n                className=\"clip\"\n                id=\"S\"\n                ref={sRef}\n                title=\"Bass-2\"\n              ></audio>\n              S\n            </button>\n            <button\n              className=\"drum-pad\"\n              id=\"Bass-3\"\n              onClick={() => playAudio(dRef.current)}\n            >\n              <audio\n                src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/up7semi+wav.wav\"\n                type=\"audio/ogg\"\n                className=\"clip\"\n                id=\"D\"\n                ref={dRef}\n                title=\"Bass-3\"\n              ></audio>\n              D\n            </button>\n            <button\n              className=\"drum-pad\"\n              id=\"Drum-loop-FULL\"\n              onClick={() => playAudio(zRef.current)}\n            >\n              <audio\n                src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/full+amen+wav.wav\"\n                type=\"audio/ogg\"\n                className=\"clip\"\n                id=\"Z\"\n                ref={zRef}\n                title=\"Drum-loop-FULL\"\n              ></audio>\n              Z\n            </button>\n            <button\n              className=\"drum-pad\"\n              id=\"Drum-loop-ROLL-1\"\n              onClick={() => playAudio(xRef.current)}\n            >\n              <audio\n                src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/chop1+wav.wav\"\n                type=\"audio/ogg\"\n                className=\"clip\"\n                id=\"X\"\n                ref={xRef}\n                title=\"Drum-loop-ROLL-1\"\n              ></audio>\n              X\n            </button>\n            <button\n              className=\"drum-pad\"\n              id=\"Drum-loop-ROLL-2\"\n              onClick={() => playAudio(cRef.current)}\n            >\n              <audio\n                src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/drum+machine+wavs/chop2+wav.wav\"\n                type=\"audio/ogg\"\n                className=\"clip\"\n                id=\"C\"\n                ref={cRef}\n                title=\"Drum-loop-ROLL-2\"\n              ></audio>\n              C\n            </button>\n          </div>\n        </div>\n      </div>\n      <div id=\"bottom-banner\">\n        <div id=\"credits\">Design and Coding - G. Hauschildt</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}